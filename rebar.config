                                                % -*- erlang -*-

{erl_opts, [debug_info, warnings_as_errors, {parse_transform, lager_transform}]}.

%%-------------------------------------------------------------------
%% Dependencies
%%-------------------------------------------------------------------

{deps,
 [
  lager,
  {cuttlefish, ".*", {git, "https://github.com/tsloughter/cuttlefish.git", {branch, "develop"}}},
  {ranch, "1.1.0"},
  {cowboy, "1.0.2"},
  {jsx, "1.4.5"},
  fifo_utils,
  {msgpack, ".*", {git, "https://github.com/msgpack/msgpack-erlang.git", {tag, "0.3.3"}}},
  mmath,
  {dqe, ".*", {git, "https://github.com/dalmatinerdb/dqe.git", {branch, "master"}}},
  eper,
  recon
 ]}.

%%-------------------------------------------------------------------
%% Plugins
%%-------------------------------------------------------------------

{plugins,
 [
  {rebar3_cuttlefish, ".*", {git, "git://github.com/tsloughter/rebar3_cuttlefish.git", {branch, "master"}}}
 ]}.

%%-------------------------------------------------------------------
%% Hooks
%%-------------------------------------------------------------------

{cover_enabled, true}.
{pre_hooks, [{compile, "make version_header"}]}.

%%-------------------------------------------------------------------
%% Testing
%%-------------------------------------------------------------------

{eunit_opts, [{report,{eunit_surefire,[{dir,"."}]}}]}.

{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, % exports_not_used, that is a problem with having multiple apps
               deprecated_function_calls, deprecated_functions]}.

{elvis,
 [#{dirs => ["apps/*/src"],
    filter => "*.erl",
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 80,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names, #{ignore => []}},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => []}},
              {elvis_style, no_if_expression},
              {elvis_style, invalid_dynamic_call,
               #{ignore => [%% Meeded for Transport:
                            dalmatiner_bucket_handler,
                            dalmatiner_metric_handler,
                            dalmatiner_idx_handler
                           ]}},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {
                elvis_style,
                module_naming_convention,
                #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                  ignore => []}
              },
              {
                elvis_style,
                function_naming_convention,
                #{regex => "^([a-z][a-z0-9]*_?)*$"}
              },
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 12}},
              {elvis_style, no_debug_call,
               #{ignore => [
                            %% This is a console, we are doing IO there not
                            %% any debug output.
                            dalmatiner_console
                           ]}}
             ]
   },
  #{dirs => ["."],
    filter => "Makefile",
    rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
              {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    %% on the test branch master deps are OK
    rules => [%{elvis_project, no_deps_master_rebar, #{ignore => []}},
              {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
   },
  #{dirs => ["."],
    filter => "elvis.config",
    rules => [{elvis_project, old_configuration_format}]
   }
 ]
}.

%%-------------------------------------------------------------------
%% Profiles
%%-------------------------------------------------------------------

{profiles,
 [{prod, [{relx, [{dev_mode, false}]}]},
  {lint,
   [{plugins,
     [{rebar3_lint,
       {git, "https://github.com/project-fifo/rebar3_lint.git",
        {tag, "0.1.3"}}}]}]},
  {eqc,
   [{plugins, [rebar3_eqc]},
    {deps, [fqc]}]}]}.

%%-------------------------------------------------------------------
%% Overrides
%%-------------------------------------------------------------------

{overrides,
 [
  %% R18
  {override, edown,
   [{erl_opts, [debug_info]}]},
  {override, eper,
   [{erl_opts, [debug_info]}]},
  {override, pooler,
   [{erl_opts,
     [{platform_define, "^[0-9]+", namespaced_types},
      debug_info,
      inline]}]}]}.

%%-------------------------------------------------------------------
%% RELx
%%-------------------------------------------------------------------

{relx,
 [{release, {"dalmatinerfe", "0.1.0"},
   [sasl,
    dalmatiner_frontend,
    {cuttlefish, load},
    {runtime_tools, load}, %% for dyntrace
    %% for qdate
    {erlang_localtime, load},
    {erlware_commons, load},
    %% runtime tools
    {kernel, permanent},
    {recon, load},
    {eper, load}
   ]},
  {dev_mode, true},
  {include_erts, true},
  {generate_start_script, false},
  {overlay_vars, "rel/vars.config"},
  {overlay,
   [{mkdir, "etc"},
    {copy, "rel/files/erl", "erts-\{\{erts_vsn\}\}/bin/erl"},
    {copy, "rel/files/nodetool", "erts-\{\{erts_vsn\}\}/bin/nodetool"},
    {template, "rel/files/dalmatinerfe", "bin/dalmatinerfe"},
    {copy, "_build/default/bin/cuttlefish", "bin/cuttlefish"},
    {copy, "share", "share"},
    %% {copy, "_build/prod/lib/fifo_utils/priv/update_config.sh", "share/"},
    {template, "schema/dalmatinerfe.schema", "share/schema/00-dalmatiner_frontend.schema"},
    {template, "_build/default/lib/dqe/priv/dqe.schema", "share/schema/01-dqe.schema"},
    {template, "schema/erlang_vm.schema", "share/schema/02-vm.schema"},
    {template, "schema/lager.schema", "share/schema/03-lager.schema"}
   ]}]}.


%%-------------------------------------------------------------------
%% Cuttlefish
%%-------------------------------------------------------------------

{cuttlefish_filename, "dalmatinerfe.conf.example"}.

{provider_hooks,
 [{post, [{release, cuttlefish}]}]}.
